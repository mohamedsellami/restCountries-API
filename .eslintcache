[{"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Header.js":"4","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\StateProvider.js":"5","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\reducer.js":"6","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Home-page\\Home.js":"7","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Home-page\\Countries.js":"8","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Home-page\\Filter.js":"9","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Home-page\\Search.js":"10","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Details-page\\Details.js":"11"},{"size":712,"mtime":1607941529189,"results":"12","hashOfConfig":"13"},{"size":616,"mtime":1607944384972,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1475,"mtime":1607941833358,"results":"16","hashOfConfig":"13"},{"size":381,"mtime":1607941624257,"results":"17","hashOfConfig":"13"},{"size":1428,"mtime":1607943533253,"results":"18","hashOfConfig":"13"},{"size":632,"mtime":1607944322462,"results":"19","hashOfConfig":"13"},{"size":2454,"mtime":1607943907257,"results":"20","hashOfConfig":"13"},{"size":2176,"mtime":1607941397958,"results":"21","hashOfConfig":"13"},{"size":2280,"mtime":1607943997030,"results":"22","hashOfConfig":"13"},{"size":3321,"mtime":1607942122765,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1omaieg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\index.js",[],["50","51"],"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Header.js",[],"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\StateProvider.js",[],"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\reducer.js",["52","53"],"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Home-page\\Home.js",[],"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Home-page\\Countries.js",["54","55"],"import React, { useEffect } from 'react';\r\nimport './Countries.scss';\r\nimport { useStateValue } from '../StateProvider';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Countries() {\r\n\r\n    const [{ countries, allCountries, dark }, dispatch ] = useStateValue();\r\n\r\n    const openDetail = (name) =>{\r\n        return function(){\r\n            dispatch({\r\n            type: 'GET_DETAILS',\r\n            name,\r\n            allCountries: [...allCountries]\r\n            })\r\n        }  \r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n            .then(res => res.json())\r\n            .then((result)=>{\r\n                dispatch({\r\n                    type: 'DEFAULT',\r\n                    countries: result\r\n                })\r\n            },\r\n            (error) => {\r\n                dispatch({\r\n                    type: 'ERROR',\r\n                    countries: []\r\n                })\r\n            }\r\n            );\r\n    }, [])\r\n\r\n    const background = {\r\n        backgroundColor: dark ? 'hsl(207, 26%, 17%)' : 'hsl(0, 0%, 98%)'\r\n    }\r\n    const color = {\r\n        color: dark ? 'hsl(0, 0%, 100%)' : 'hsl(200, 15%, 8%)'\r\n    }\r\n    const backgroundElements = {\r\n        backgroundColor: dark ? 'hsl(209, 23%, 22%)' : 'hsl(0, 0%, 100%)'\r\n    }\r\n    \r\n    return (\r\n        <div className=\"countries\" style={background}>\r\n            {\r\n                countries.map((country, i)=>(\r\n                    <Link to=\"/details\" key={i}>\r\n                        <div className=\"country\" onClick={openDetail(country.name)} style={backgroundElements}>\r\n                            <img src={country.flag}/>\r\n                            <div className=\"info\">\r\n                                <h5 style={color}>{country.name}</h5>\r\n                                <p style={color}>Population: <span style={color}>{country.population}</span></p>\r\n                                <p style={color}>Region: <span style={color}>{country.region}</span></p>\r\n                                <p style={color}>Capital: <span style={color}>{country.capital}</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))\r\n            }\r\n            \r\n            <div className=\"additionalDiv\"></div>\r\n            <div className=\"additionalDiv\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countries\r\n","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Home-page\\Filter.js",["56"],"C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Home-page\\Search.js",["57","58","59","60","61"],"import React, { useState, useEffect } from 'react';\r\nimport './Search.scss';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nfunction Search() {\r\n\r\n    const [{ allCountries, dark }, dispatch ] = useStateValue();\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [autoComplete, setautoComplete] = useState('');\r\n    const [isAutoComplete, setIsAutoComplete] = useState(false);\r\n\r\n    const handleSuggetion = (e) =>{\r\n        document.querySelector(\".autoComplete\").style.display = 'none';\r\n        setSearchValue(e.target.textContent);\r\n        setIsAutoComplete(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        document.querySelector(\".autoComplete\").style.display = 'flex';\r\n        let suggetions = [...allCountries].filter((country) => country.name.substring(0, searchValue.length).toLowerCase() == searchValue.toLowerCase());\r\n        setautoComplete(suggetions.map((country)=> <span onClick={handleSuggetion} style={color}>{country.name}</span>))\r\n        if(searchValue == \"\" || suggetions == []){\r\n            document.querySelector(\".autoComplete\").style.display = 'none';\r\n        }\r\n        if(isAutoComplete && suggetions != []){\r\n            search();\r\n            document.querySelector(\".autoComplete\").style.display = 'none';\r\n            setIsAutoComplete(false);\r\n        }\r\n    }, [searchValue])\r\n\r\n    const search = () =>{\r\n        dispatch({\r\n            type: 'SEARCH',\r\n            allCountries: allCountries,\r\n            name: searchValue\r\n        })\r\n    }\r\n\r\n    const color = {\r\n        color: dark ? 'hsl(0, 0%, 100%)' : 'hsl(200, 15%, 8%)'\r\n    }\r\n    const backgroundElements = {\r\n        backgroundColor: dark ? 'hsl(209, 23%, 22%)' : 'hsl(0, 0%, 100%)'\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-input\">\r\n            <SearchIcon className=\"search-icon\" onClick={search} style={color}/>\r\n            <input type=\"search\" placeholder=\"Search for country...\" value={searchValue} onChange={(e)=> setSearchValue(e.target.value)} style={{...backgroundElements, ...color}} />\r\n            <div className=\"autoComplete\" style={{...backgroundElements}}>\r\n                {autoComplete}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\hp\\Desktop\\rest-countries\\restcountries\\src\\components\\Details-page\\Details.js",["62","63","64"],"import React from 'react';\r\nimport './Details.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nfunction Details() {\r\n\r\n    const [{ allCountries, currentCountry }, dispatch ] = useStateValue();\r\n    \r\n    console.log(currentCountry)\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">\r\n                <button className=\"back-button\"><KeyboardBackspaceIcon className=\"back-arrow\"/> Back</button>\r\n            </Link>\r\n            <div className=\"details-container\">\r\n                <img src={currentCountry?.flag}/>\r\n                <div className=\"info\">\r\n                    <h3>{ currentCountry?.name }</h3>\r\n                    <div className=\"more-details\">\r\n                    <div className=\"first-part\">\r\n                        <p>Native Name: <span>{currentCountry?.nativeName}</span></p>\r\n                        <p>Population: <span>{currentCountry?.population}</span></p>\r\n                        <p>Region: <span>{currentCountry?.region}</span></p>\r\n                        <p>Sub Region: <span>{currentCountry?.subregion}</span></p>\r\n                        <p>Capital: <span>{currentCountry?.capital}</span></p>\r\n                    </div>\r\n                        <div className=\"second-part\">\r\n                        <p>Top Level Domain: <span>{currentCountry?.topLevelDomain}</span></p>\r\n                        <p>Currencies: <span>{currentCountry?.currencies[0].name}</span></p>\r\n                        <p>Languages: <span>{currentCountry?.languages.map((language)=>{\r\n                            return language.name\r\n                        }).join(', ')}</span></p>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"borders\">\r\n                        <p>Borders Countries:</p>\r\n                        <div className=\"border-countries\">\r\n                            {currentCountry?.borders.map((countryCode, i)=>(\r\n                                <span key={i}>{allCountries.filter((country)=> country.alpha3Code == countryCode)[0].name}</span>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":24,"column":88,"nodeType":"71","messageId":"72","endLine":24,"endColumn":90},{"ruleId":"69","severity":1,"message":"70","line":30,"column":100,"nodeType":"71","messageId":"72","endLine":30,"endColumn":102},{"ruleId":"73","severity":1,"message":"74","line":37,"column":8,"nodeType":"75","endLine":37,"endColumn":10,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":55,"column":29,"nodeType":"79","endLine":55,"endColumn":54},{"ruleId":"69","severity":1,"message":"80","line":12,"column":56,"nodeType":"71","messageId":"72","endLine":12,"endColumn":58},{"ruleId":"69","severity":1,"message":"70","line":21,"column":124,"nodeType":"71","messageId":"72","endLine":21,"endColumn":126},{"ruleId":"69","severity":1,"message":"70","line":23,"column":24,"nodeType":"71","messageId":"72","endLine":23,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":23,"column":44,"nodeType":"71","messageId":"72","endLine":23,"endColumn":46},{"ruleId":"69","severity":1,"message":"80","line":26,"column":41,"nodeType":"71","messageId":"72","endLine":26,"endColumn":43},{"ruleId":"73","severity":1,"message":"81","line":31,"column":8,"nodeType":"75","endLine":31,"endColumn":21,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":46,"nodeType":"85","messageId":"86","endLine":9,"endColumn":54},{"ruleId":"77","severity":1,"message":"78","line":18,"column":17,"nodeType":"79","endLine":18,"endColumn":50},{"ruleId":"69","severity":1,"message":"70","line":41,"column":99,"nodeType":"71","messageId":"72","endLine":41,"endColumn":101},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'allCountries', 'color', 'isAutoComplete', and 'search'. Either include them or remove the dependency array.",["90"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [dispatch]",{"range":"95","text":"96"},"Update the dependencies array to be: [allCountries, color, isAutoComplete, search, searchValue]",{"range":"97","text":"98"},[965,967],"[dispatch]",[1374,1387],"[allCountries, color, isAutoComplete, search, searchValue]"]